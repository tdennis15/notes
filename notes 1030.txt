CS 460 10/30/17 Notes

HW 6 introduction - Working with a large pre-existing database.
****************************************
Enitity Framework base object-relational data mapping.
****************************************
*video in class*
	4 basic workflows
		targeting a new database or an empty database
		used database with data?
		models or writing code?

	model first: 	
		designer and boxes with clases written by designer

	database first: 
		work with data relations first and then generate boxes and code to form a DB

	code first new DB:
		with code first and relations and then build the model where the DB is made
		code first migrations

	code first existing DB:
		work with existing flows and define classes
****************************************

Green Field Dev. When theres no existing data infrastructure not very likely to be the case
Majority of the time there will already be a database and structure before starting a project. managed by DB admin. 
****************************************
Database First design. assume it exists
****************************************
Choose between model first or code first design. Majority of the time it should be Code first from existing DB.
easiest to modify and read.

*Database migration - making a change to the C# class that maps to a table. Entity framework changes the database
			and generates code to update to new data model. NOT USED, MUCHO BAD JU JU.*
****************************************
Object explorer to access databases. Northwind Example
	download db -> restore -> some proceedure -> build restore or generate the classes. -> project solution explorer ->
	models ->add ->new item -> data ->ado.net entity data model -> "NorthwindContext" -> Code first from existing DB ->
	new connection -> choose data source -> micro SQL server -> server name ->
	 *name in server explorer* (LocalDB)\MSSQLLocalDB) -> select DB -> Northwind -> test connection -> "OK"
	next -> entity inclusion -> tables -> all (or what you need - production) -> finish
****************************************
 context class, extends  DbContext

partial classes -autogenerated class can be modified in another class (dont edit auto generated files)
		updating a DB will regenerate the auto gen classes and could lose data if code is written to
		auto generated classes. 
****************************************
Navigation properties - the relationship between models (properties of other entities). Database Relations
	Use tool - linq pad, uses connections between classes to write queries and test the database. (in live time) 
	
	add connection -> entity framework through DB context class -> (path to assem) .dll for compiled project where 
	it was saved -> Web.config (path to application) -> test -> ok ->set connection at task pane
****************************************
Linqpad allows for direct use of the tables for a query.  
